<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Java Code의 인터페이스와 같은 경로와 이름을 namespace에 기술한다. -->
<mapper namespace="org.zerock.mapper.ReplyMapper">
<insert id="insert">
insert into tbl_reply (bno, reply, replyer)
values (#{bno}, #{reply}, #{replyer}) 
</insert>
<select id="read" resultType="org.zerock.domain.ReplyVO">
select * from tbl_reply where rno = #{rno}
</select>
<delete id="delete">
delete tbl_reply where rno = #{rno}
</delete>
<update id="update">
update tbl_reply set reply = #{reply}, updateDate=sysdate where rno = #{rno}
</update>
<!-- 오래된 댓글이 먼저 보이도록 정렬 : 정책에 따라 다를 수 있다.
<select id="getListWithPaging" resultType="org.zerock.domain.ReplyVO">
select * from tbl_reply where bno = #{bno} order by rno asc
</select>
 -->
<!-- 
<select id="getListWithPaging" resultType="org.zerock.domain.ReplyVO">
    select * from tbl_reply where bno = #{bno} order by rno asc
    offset (#{cri.pageNum} - 1) * #{cri.amount} rows fetch next #{cri.amount} rows only
</select>
 -->
<!-- 실행 계획을 적용한 페이징 처리 -->
<select id="getListWithPaging" resultType="org.zerock.domain.ReplyVO">
    select /*+index (tbl_reply idx_reply) */* from tbl_reply where bno = #{bno} order by rno asc
    offset (#{cri.pageNum} - 1) * #{cri.amount} rows fetch next #{cri.amount} rows only
</select>
<select id="getCountByBno" resultType="int">
select count(rno) from tbl_reply where bno = #{bno}
</select>

</mapper>